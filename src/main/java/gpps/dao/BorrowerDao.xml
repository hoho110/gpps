<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gpps.dao.IBorrowerDao">
	<select id="countAll" resultType="int">  <!-- 查询表中记录总数 -->
		select count(*) c from Borrower;
	</select>
	<select id="findAll" resultType="gpps.model.Borrower">
	    select * from Borrower 
       LIMIT #{offset}, #{recnum}   
	</select>
	<select id="find" parameterType="Integer" resultType="gpps.model.Borrower">
		select *
		from Borrower where id=#{id}
	</select>
	<select id="findByAccountID" parameterType="Integer" resultType="gpps.model.Borrower">
		select *
		from Borrower where accountId=#{accountId}
	</select>
	<select id="findByLoginId" parameterType="String" resultType="gpps.model.Borrower">
		select *
		from Borrower where loginId=#{loginId}
	</select>
	<select id="findByLoginIdAndPassword" resultType="gpps.model.Borrower">
		select *
		from
		Borrower where (loginId=#{loginId} or tel=#{loginId}) and password=#{password}
	</select>
	<select id="findByTel" parameterType="String" resultType="gpps.model.Borrower">
		select
		*
		from Borrower where tel=#{tel}
	</select>
	<select id="findByEmail" parameterType="String" resultType="gpps.model.Borrower">
		select
		*
		from Borrower where email=#{email}
	</select>
	<select id="findByIdentityCard" parameterType="String" resultType="gpps.model.Borrower">
		select
		*
		from Borrower where identityCard=#{identityCard}
	</select>
	<select id="findByState" resultType="gpps.model.Borrower">
		select *
		from
		Borrower where
		privilege=#{state}
	</select>
	<insert id="create" parameterType="gpps.model.Borrower"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		Borrower(name,tel,email,loginId,password,identityCard,accountId,createtime,privilege,material,request,creditValue,companyName,license,corporationPhone,corporationName,corporationAddr,thirdPartyAccount,level,brange)
		values(#{name},#{tel},#{email},#{loginId},#{password},#{identityCard},#{accountId},#{createtime},#{privilege},#{material},#{request},#{creditValue},#{companyName},#{license},#{corporationPhone},#{corporationName},#{corporationAddr},#{thirdPartyAccount},#{level},#{brange})
	</insert>
	<update id="changePrivilege">
		update Borrower set
		privilege=#{privilege},lastModifyTime=#{lastModifyTime}
		where
		id=#{id}
	</update>
	<update id="changePassword">
		update Borrower set
		password=#{password}
		where id=#{id}
	</update>
	<update id="changeCreditValueAndLevel">
		update Borrower set
		creditValue=#{creditValue},level=#{level}
		where id=#{id}
	</update>
	<delete id="delete">
		delete from Borrower
		where id=#{id}
	</delete>
	<select id="findAccessory" parameterType="Integer" resultType="String">
        select material
        from Borrower where id=#{id}
    </select>
    <update id="updateAccessory">
        update Borrower set
        material=#{material}
        where
        id=#{borrowerId}
    </update>
    <select id="findContactor" parameterType="Integer" resultType="String">
        select contactor
        from Borrower where id=#{id}
    </select>
    <update id="updateContactor">
        update Borrower set
        contactor=#{contactor}
        where
        id=#{borrowerId}
    </update>
    <update id="registerThirdPartyAccount">
        update Borrower set
        thirdPartyAccount=#{thirdPartyAccount},accountNumber=#{accountNumber}
        where id=#{id}
    </update>
    <select id="countByPrivilege" resultType="int">  <!-- 查询表中记录总数 -->
        select count(*) c from Borrower
        <if test="privilege != -1">
            where privilege =#{privilege}
        </if>
    </select>
    <select id="findByPrivilegeWithPaging" resultType="gpps.model.Borrower">
        select * from Borrower 
         <if test="privilege != -1">
            where privilege =#{privilege}
        </if>
        order by createtime desc
        LIMIT #{offset}, #{recnum}
    </select>
    <update id="update">
    	update borrower set 
    	corporationName=#{corporationName},corporationAddr=#{corporationAddr},brange=#{brange}
    	where id=#{id}
    </update>
    <update id="bindCard">
    	update borrower set cardBindingId=#{cardId} where id=#{id}
    </update>
    <select id="findByThirdPartyAccount" parameterType="String" resultType="gpps.model.Borrower">
    	select * from borrower where thirdPartyAccount=#{thirdPartyAccount}
    </select>
    <update id="updateAuthorizeTypeOpen">
    	update borrower set authorizeTypeOpen=#{authorizeTypeOpen} where id=#{id}
    </update>
    <update id="updateTelAndEmail">
    	update borrower set email=#{email},tel=#{tel} where id=#{id}
    </update>
</mapper>