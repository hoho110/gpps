<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gpps.dao.IPayBackDao">
	<insert id="create" parameterType="gpps.model.PayBack"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		PayBack(borrowerAccountId,productId,state,chiefAmount,interest,deadline,realtime,type)
		values(#{borrowerAccountId},#{productId},#{state},#{chiefAmount},#{interest},#{deadline},#{realtime},#{type})
	</insert>
	<select id="findAllByProduct" resultType="gpps.model.PayBack">
	   <![CDATA[
		select *
		from PayBack
		where productId=#{productId} and state <> 4 order by deadline asc
		]]>
	</select>
	<select id="find" parameterType="Integer" resultType="gpps.model.PayBack">
		select *
		from PayBack where id=#{id}
	</select>
	<update id="changeState">
		update
		PayBack set state=#{state}
		<if test="state == 2">
			,realtime=#{datetime}
		</if>
		where id=#{id}
	</update>
	<delete id="delete">
		delete from PayBack
		where
		id=#{id}
	</delete>
	<select id="findByProductsAndState" resultType="gpps.model.PayBack">
		select * from PayBack
		where state=#{state}
		<if test="productIds != null">
			and productId in
			<foreach item="item" index="index" collection="productIds"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		order by deadline asc
	</select>
	<select id="findLastest" resultType="gpps.model.PayBack">
	 <![CDATA[
        select * from PayBack
        where productId=#{productId} where state <> 4 
        order by deadline desc
        LIMIT 1, 1
        ]]>
	</select>
	<update id="update" parameterType="gpps.model.PayBack">
		update
		PayBack set
		borrowerAccountId=#{borrowerAccountId},productId=#{productId},state=#{state},chiefAmount=#{chiefAmount},interest=#{interest},deadline=#{deadline},realtime=#{realtime},type=#{type}
		where id=#{id}
	</update>
	<select id="findByBorrowerAndState" resultType="gpps.model.PayBack">
		select *
		from PayBack where borrowerAccountId=#{borrowerAccountId}
		<if test="states != null">
			and state in
			<foreach item="item" index="index" collection="states" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="starttime != -1">
            <![CDATA[and deadline >= #{starttime}]]>
		</if>
		<if test="endtime != -1">
            <![CDATA[and deadline <= #{endtime}]]>
		</if>
		order by deadline asc
		LIMIT #{offset}, #{recnum}
	</select>
	<select id="countByBorrowerAndState" resultType="int">
		select count(*)
		from PayBack where
		borrowerAccountId=#{borrowerAccountId}
		<if test="states != null">
			and state in
			<foreach item="item" index="index" collection="states" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="starttime != -1">
            <![CDATA[and deadline >= #{starttime}]]>
		</if>
		<if test="endtime != -1">
            <![CDATA[and deadline <= #{endtime}]]>
		</if>
	</select>
	<select id="sumBorrowerWillBeRepayedPayBacks" resultType="gpps.service.PayBackDetail">
		select sum(chiefamount) chiefAmount,sum(interest) interest from
		PayBack
		where borrowerAccountId=#{borrowerAccountId}
		<if test="states != null">
			and state in
			<foreach item="item" index="index" collection="states" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
        <![CDATA[and deadline <= #{endtime} ]]>
	</select>
	<select id="sumBorrowerRepayedPayBacks" resultType="gpps.service.PayBackDetail">
        select sum(chiefamount) chiefAmount,sum(interest) interest from
        PayBack
        where borrowerAccountId=#{borrowerAccountId}
        <if test="states != null">
            and state in
            <foreach item="item" index="index" collection="states" open="("
                separator="," close=")">
                #{item}
            </foreach>
        </if>
        <![CDATA[and realtime >= #{starttime} ]]>
    </select>
</mapper>