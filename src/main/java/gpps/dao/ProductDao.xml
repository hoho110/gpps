<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gpps.dao.IProductDao">
	<insert id="create" parameterType="gpps.model.Product"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		Product(state,govermentorderId,expectAmount,realAmount,rate,paybackmodel,productseriesId,levelToBuy,createtime,minimum,description,incomeEndtime,miniAdd,lastmodifytime)
		values(#{state},#{govermentorderId},#{expectAmount},#{realAmount},#{rate},#{paybackmodel},#{productseriesId},#{levelToBuy},#{createtime},#{minimum},#{description},#{incomeEndtime}, #{miniAdd},#{lastmodifytime})
	</insert>
	<update id="changeState">
		update Product set
		state=#{state},lastmodifytime=#{lastmodifytime}
		where
		id=#{id}
	</update>
	<select id="find" parameterType="Integer" resultType="gpps.model.Product">
		select id,state,govermentorderId,expectAmount,realAmount,rate,paybackmodel,productseriesId,levelToBuy,createtime,minimum,description,incomeEndtime,miniAdd
		from Product where id=#{id}
	</select>
	<select id="findByGovermentOrder" parameterType="Integer"
		resultType="gpps.model.Product">
		select id,state,govermentorderId,expectAmount,realAmount,rate,paybackmodel,productseriesId,levelToBuy,createtime,minimum,description,incomeEndtime,miniAdd
		from Product where govermentorderId=#{orderId}
	</select>
	<select id="findByState" resultType="gpps.model.Product">
		select id,state,govermentorderId,expectAmount,realAmount,rate,paybackmodel,productseriesId,levelToBuy,createtime,minimum,description,incomeEndtime,miniAdd
		from Product
		<if test="states != null">
			where state in
			<foreach item="item" index="index" collection="states" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="states == null">
           <![CDATA[ where state <> 0 ]]>
        </if>
		order by state asc,createtime asc
		LIMIT #{offset}, #{recnum}
	</select>
	<select id="countByState" resultType="int">
		select count(*)
		from Product
		<if test="states != null">
			where state in
			<foreach item="item" index="index" collection="states" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="states == null">
           <![CDATA[ and state <> 0 ]]>
        </if>
	</select>
	<select id="findByProductSeriesAndState" resultType="gpps.model.Product">
		select id,state,govermentorderId,expectAmount,realAmount,rate,paybackmodel,productseriesId,levelToBuy,createtime,minimum,description,incomeEndtime,miniAdd
		from Product where productSeriesId=#{productSeriesId}
		<if test="states != null">
			and state
			in
			<foreach item="item" index="index" collection="states" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="states == null">
           <![CDATA[ and state <> 0 ]]>
        </if>
		order by state asc,createtime asc 
		LIMIT #{offset}, #{recnum}
	</select>
	<select id="countByProductSeriesAndState" resultType="int">
		select count(*)
		from Product where productSeriesId=#{productSeriesId}
		<if test="states != null">
			and state
			in
			<foreach item="item" index="index" collection="states" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="states == null">
           <![CDATA[ and state <> 0 ]]>
        </if>
	</select>
	<update id="changeBuyLevel">
		update Product set
		levelToBuy=#{levelToBuy}
		where
		id=#{id}
	</update>
	<update id="buy">
		update Product set
		realAmount=realAmount+#{amount}
		where
		id=#{id}
	</update>
	<delete id="delete">
		delete from Product
		where
		id=#{id}
	</delete>
	<select id="findAccessory" parameterType="Integer" resultType="String">
        select accessory
        from Product where id=#{id}
    </select>
    <update id="updateAccessory">
        update Product set
        accessory=#{accessory}
        where
        id=#{productId}
    </update>
    <update id="update">
    	update Product set 
    	expectAmount=#{expectAmount},rate=#{rate},incomeEndtime=#{incomeEndtime},minimum=#{minimum},miniAdd=#{miniAdd},levelToBuy=#{levelToBuy} 
    	where id=#{id}
    </update>
</mapper>